name: AI Security Remediation

on:
  workflow_dispatch: 
  workflow_call:

permissions:
  contents: write
  actions: write
  security-events: write
  pull-requests: write
  issues: write

jobs:
  ai-fix-generation:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN }}
    - name: Debug permissions and API
      env:
        TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        echo "Checking repository permissions..."
        curl -s -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/malayu21/Test-for-Devsecops/collaborators/malayu21/permission
        echo "Checking rate limit..."
        curl -s -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/rate_limit
        echo "Checking branch protection..."
        curl -s -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/malayu21/Test-for-Devsecops/branches/main/protection
    - name: Download security results
      uses: actions/download-artifact@v4
      with:
        name: security-results
        path: ./security-results/
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Generate AI fixes
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        python scripts/ai_remediation.py \
          --input ./security-results/merged-results.json \
          --output ./fixes.json || { echo "AI remediation failed"; exit 1; }
    - name: Apply fixes
      run: |
        python scripts/apply_fixes.py --fixes ./fixes.json || { echo "Apply fixes failed"; exit 1; }
    - name: Create fix branch
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "AI Security Bot"
        BRANCH_NAME="ai-security-fixes-$(date +%Y%m%d-%H%M%S)"
        git checkout -b $BRANCH_NAME
        git add .
        git commit -m "AI Security Fixes

Applied automated fixes for security vulnerabilities:
$(cat fixes-summary.txt)

Please review these changes carefully before merging.
" || exit 0
        git push --force origin $BRANCH_NAME
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
    - name: Create Pull Request
      env:
        TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        curl -s -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github.v3+json" \
          -X POST -d '{
            "title": "AI Security Fixes - $(date +%Y-%m-%d)",
            "head": "${{ env.BRANCH_NAME }}",
            "base": "main",
            "body": "Automated Security Fixes\n\n$(cat fixes-summary.txt)\n\n- These fixes were generated by AI and need human review\n- Test thoroughly before merging\n- Some fixes might need manual adjustment\n- Check that functionality still works as expected\n\n- SAST Issues: $(jq '.sast | length' ./security-results/merged-results.json)\n- Dependency Issues: $(jq '.dependencies | length' ./security-results/merged-results.json)\n- DAST Issues: $(jq '.dast | length' ./security-results/merged-results.json)\n\n---\n*Generated automatically by AI Security Bot*",
            "labels": ["security", "automated-fix", "needs-review"]
          }' \
          https://api.github.com/repos/malayu21/Test-for-Devsecops/pulls
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: workflow-logs
        path: '*.log'
